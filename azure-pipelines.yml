trigger:
- '*'

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK 8.x'
  inputs:
    packageType: sdk
    version: '8.x'   # AquÃ­ se indica usar .NET 8

#  Usar Node.js 20.x (compatible con Dart Sass)
- task: UseNode@1
  displayName: 'Use Node.js 20.x'
  inputs:
    version: '20.x'

#  Instalar dependencias sin usar legacy-peer-deps ni node-gyp
- script: |
    npm install
  displayName: 'Install Node modules'

#  Compilar Sass con Dart Sass (sass en lugar de node-sass)
- script: 'npx sass Tailspin.SpaceGame.Web/wwwroot:Tailspin.SpaceGame.Web/wwwroot'
  displayName: 'Compile Sass assets with Dart Sass'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: Tailspin.SpaceGame.Web/wwwroot

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - Release'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration Release'
    projects: '**/*.csproj'
